name: Publish

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ["linux", "windows", "macOS"]
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      # Try downloading and installing .NET 9 SDK directly
      - name: Download .NET 9 SDK
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            curl -Lo dotnet-install.ps1 https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1
            pwsh -Command "./dotnet-install.ps1 -Version 9.0.102 -InstallDir $env:DOTNET_ROOT"
          else
            curl -Lo dotnet-install.sh https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh
            chmod +x ./dotnet-install.sh
            ./dotnet-install.sh --version 9.0.102 --install-dir $DOTNET_ROOT
          fi

      # Add diagnostic steps
      - name: Check DOTNET_ROOT
        shell: bash
        run: |
          echo "DOTNET_ROOT: $DOTNET_ROOT"
          if [ -d "$DOTNET_ROOT" ]; then
            ls -la $DOTNET_ROOT
          else
            echo "DOTNET_ROOT directory not found"
          fi

      - name: Check installed SDKs before setup-dotnet
        shell: bash
        run: |
          dotnet --list-sdks || echo "No SDKs found initially"

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.102
            8.0.100

      - name: Verify .NET installation
        shell: bash
        run: |
          echo "Installed .NET SDKs:"
          dotnet --list-sdks
          echo "Current .NET version:"
          dotnet --version
          echo "dotnet --info output:"
          dotnet --info

      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="App-$tag-${{ matrix.target }}"

          echo "Starting build with dotnet publish..."
          dotnet publish "./cadmus-tool/cadmus-tool.csproj" --framework net9.0 --self-contained --runtime "${{ matrix.target }}" -c Release -o "$release_name" -v detailed

          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          rm -r "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "App*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
